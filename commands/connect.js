const { SlashCommandBuilder, EmbedBuilder } = require('discord.js');

module.exports = {
    data: new SlashCommandBuilder()
        .setName('connect')
        .setDescription('Comandos para ajudar com conex√µes e informa√ß√µes do FiveM')
        .addSubcommand(subcommand =>
            subcommand
                .setName('servidor')
                .setDescription('Mostra IP do servidor para conectar na cidade')
        )
        .addSubcommand(subcommand =>
            subcommand
                .setName('conectar')
                .setDescription('Mostra informa√ß√µes para conectar na cidade')
        )
        .addSubcommand(subcommand =>
            subcommand
                .setName('status')
                .setDescription('Mostra o status do servidor da cidade')
        )
        .addSubcommand(subcommand =>
            subcommand
                .setName('comandos')
                .setDescription('Lista comandos √∫teis do FiveM')
        )
        .addSubcommand(subcommand =>
            subcommand
                .setName('solucoes')
                .setDescription('Solu√ß√µes para problemas comuns de conex√£o')
        ),

    async execute(interaction) {
        try {
            const subcommand = interaction.options.getSubcommand();

            switch (subcommand) {
                case 'servidor':
                    await this.handleServidor(interaction);
                    break;
                case 'conectar':
                    await this.handleConectar(interaction);
                    break;
                case 'status':
                    await this.handleStatus(interaction);
                    break;
                case 'comandos':
                    await this.handleComandos(interaction);
                    break;
                case 'solucoes':
                    await this.handleSolucoes(interaction);
                    break;
                default:
                    await this.handleError(interaction, 'Subcomando n√£o reconhecido.');
            }
        } catch (error) {
            console.error('‚ùå Erro no comando /connect:', error);
            await this.handleError(interaction, 'Ocorreu um erro interno. Tente novamente em alguns instantes.');
        }
    },

    async handleError(interaction, errorMessage) {
        const embed = new EmbedBuilder()
            .setColor('#ff0000')
            .setTitle('‚ö†Ô∏è Erro')
            .setDescription(errorMessage)
            .addFields({
                name: 'üí° Sugest√µes',
                value: '‚Ä¢ Tente novamente em alguns instantes\n‚Ä¢ Verifique se o comando foi digitado corretamente\n‚Ä¢ Entre em contato com a administra√ß√£o se o problema persistir',
                inline: false
            })
            .setFooter({ text: 'Se o erro continuar, reporte para a administra√ß√£o' })
            .setTimestamp();

        try {
            if (interaction.replied || interaction.deferred) {
                await interaction.followUp({ embeds: [embed], ephemeral: true });
            } else {
                await interaction.reply({ embeds: [embed], ephemeral: true });
            }
        } catch (followUpError) {
            console.error('‚ùå Erro ao enviar mensagem de erro:', followUpError);
        }
    },

    async handleServidor(interaction) {
        try {
            // üîß CONFIGURA√á√ÉO DO SERVIDOR
            // Altere as informa√ß√µes abaixo para o seu servidor FiveM:
            const serverIP = "127.0.0.1:30120"; // ‚Üê SUBSTITUA pelo IP real do servidor
            const serverName = "Cidade RP";      // ‚Üê SUBSTITUA pelo nome da sua cidade
            
            const embed = new EmbedBuilder()
                .setColor('#00ff00')
                .setTitle('üåÜ Conectar na Cidade')
                .setDescription(`**${serverName}**\nPronto para entrar na cidade? Use as informa√ß√µes abaixo!`)
                .addFields(
                    {
                        name: 'üîó IP do Servidor',
                        value: `\`\`\`${serverIP}\`\`\``,
                        inline: false
                    },
                    {
                        name: 'üéÆ Como Conectar',
                        value: `**Op√ß√£o 1 - F8 Console:**\n\`connect ${serverIP}\`\n\n**Op√ß√£o 2 - Navegador:**\n\`fivem://connect/${serverIP}\`\n\n**Op√ß√£o 3 - Copiar IP:**\nCopie o IP acima e cole no FiveM`,
                        inline: false
                    },
                    {
                        name: '‚ö° Conex√£o R√°pida',
                        value: '‚Ä¢ Abra o FiveM\n‚Ä¢ Pressione **F8** para abrir o console\n‚Ä¢ Digite o comando de conex√£o\n‚Ä¢ Aguarde carregar e divirta-se!',
                        inline: false
                    },
                    {
                        name: 'üí° Dica',
                        value: 'Se n√£o conseguir conectar, use `/connect solucoes` para ver solu√ß√µes de problemas comuns!',
                        inline: false
                    }
                )
                .setFooter({ text: 'Bem-vindo √† cidade! üèôÔ∏è' })
                .setTimestamp();

            await interaction.reply({ embeds: [embed] });
        } catch (error) {
            console.error('‚ùå Erro em handleServidor:', error);
            await this.handleError(interaction, 'Erro ao exibir informa√ß√µes do servidor.');
        }
    },

    async handleConectar(interaction) {
        try {
            const servidor = interaction.options.getString('servidor');
            
            const embed = new EmbedBuilder()
                .setColor('#f1c40f')
                .setTitle('üéÆ Como Conectar no FiveM')
                .setDescription('Guia completo para conectar na cidade!')
                .addFields(
                    {
                        name: 'üìã Pr√©-requisitos',
                        value: '‚Ä¢ FiveM instalado e atualizado\n‚Ä¢ GTA V original (Steam/Epic/Rockstar)\n‚Ä¢ Conex√£o est√°vel com a internet',
                        inline: false
                    },
                    {
                        name: 'üîó Formas de Conectar',
                        value: servidor 
                            ? `**Servidor espec√≠fico:** \`${servidor}\`\n\n**Pelo F8:**\n\`connect ${servidor}\`\n\n**Pelo navegador:**\n\`fivem://connect/${servidor}\``
                            : '**Pelo F8 (in-game):**\n`connect IP:PORTA`\n\n**Pelo navegador:**\n`fivem://connect/IP:PORTA`\n\n**Pela lista de servidores:**\nF8 ‚Üí Connect ‚Üí Buscar servidor',
                        inline: false
                    },
                    {
                        name: '‚öôÔ∏è Configura√ß√µes Recomendadas',
                        value: '‚Ä¢ Fechar programas desnecess√°rios\n‚Ä¢ Modo janela sem bordas (melhor performance)\n‚Ä¢ Verificar firewall/antiv√≠rus\n‚Ä¢ Limpar cache do FiveM se necess√°rio',
                        inline: false
                    },
                    {
                        name: 'üöÄ Comandos R√°pidos',
                        value: '`F8` - Abrir console\n`quit` - Sair do servidor\n`disconnect` - Desconectar\n`reconnect` - Reconectar\n`clear` - Limpar console',
                        inline: false
                    }
                )
                .setFooter({ text: 'Use /connect solucoes para problemas comuns!' })
                .setTimestamp();

            await interaction.reply({ embeds: [embed] });
        } catch (error) {
            console.error('‚ùå Erro em handleConectar:', error);
            await this.handleError(interaction, 'Erro ao exibir guia de conex√£o.');
        }
    },

    async handleStatus(interaction) {
        try {
            // üîß CONFIGURA√á√ÉO DO SERVIDOR (mesmo IP da fun√ß√£o handleServidor)
            const serverIP = "127.0.0.1:30120"; // ‚Üê SUBSTITUA pelo IP real do servidor
            const serverName = "Cidade RP";      // ‚Üê SUBSTITUA pelo nome da sua cidade
        
        // Simula√ß√£o de status (em uma implementa√ß√£o real, voc√™ pode fazer uma requisi√ß√£o HTTP para verificar)
        const isOnline = true; // ‚Üê Mude para false se quiser simular servidor offline
        const currentPlayers = 45; // ‚Üê N√∫mero atual de jogadores (pode ser din√¢mico)
        const maxPlayers = 64;     // ‚Üê M√°ximo de jogadores do servidor
        
        const statusColor = isOnline ? '#00ff00' : '#ff0000';
        const statusEmoji = isOnline ? 'üü¢' : 'üî¥';
        const statusText = isOnline ? 'ONLINE' : 'OFFLINE';
        
        const embed = new EmbedBuilder()
            .setColor(statusColor)
            .setTitle(`${statusEmoji} Status do Servidor`)
            .setDescription(`**${serverName}**`)
            .addFields(
                {
                    name: 'ÔøΩ IP do Servidor',
                    value: `\`${serverIP}\``,
                    inline: true
                },
                {
                    name: 'üìä Status',
                    value: `**${statusText}**`,
                    inline: true
                },
                {
                    name: 'üë• Jogadores',
                    value: isOnline ? `**${currentPlayers}/${maxPlayers}**` : '**0/0**',
                    inline: true
                }
            );

        if (isOnline) {
            embed.addFields(
                {
                    name: '‚ö° Como Conectar',
                    value: `**F8 Console:**\n\`connect ${serverIP}\`\n\n**Navegador:**\n\`fivem://connect/${serverIP}\``,
                    inline: false
                },
                {
                    name: 'üí° Dica',
                    value: 'Use `/connect servidor` para ver o guia completo de conex√£o!',
                    inline: false
                }
            );
        } else {
            embed.addFields(
                {
                    name: '‚ö†Ô∏è Servidor Offline',
                    value: 'O servidor est√° temporariamente indispon√≠vel.\nTente novamente em alguns minutos ou entre em contato com a administra√ß√£o.',
                    inline: false
                },
                {
                    name: 'ÔøΩ Poss√≠veis Causas',
                    value: '‚Ä¢ Manuten√ß√£o programada\n‚Ä¢ Reinicializa√ß√£o do servidor\n‚Ä¢ Problemas t√©cnicos tempor√°rios\n‚Ä¢ Atualiza√ß√£o de recursos',
                    inline: false
                }
            );
        }

        embed.setFooter({ text: `√öltima verifica√ß√£o: ${new Date().toLocaleString('pt-BR')}` })
             .setTimestamp();

        await interaction.reply({ embeds: [embed] });
        } catch (error) {
            console.error('‚ùå Erro em handleStatus:', error);
            await this.handleError(interaction, 'Erro ao verificar status do servidor.');
        }
    },

    async handleComandos(interaction) {
        try {
            const embed = new EmbedBuilder()
                .setColor('#9b59b6')
                .setTitle('‚å®Ô∏è Comandos √öteis do FiveM')
                .setDescription('Lista completa de comandos para o console F8')
                .addFields(
                    {
                        name: 'üîó Conex√£o',
                        value: '`connect IP:PORTA` - Conectar ao servidor\n`disconnect` - Desconectar do servidor\n`reconnect` - Reconectar ao √∫ltimo servidor\n`quit` - Sair do FiveM',
                        inline: false
                    },
                    {
                        name: 'üõ†Ô∏è Sistema',
                        value: '`clear` - Limpar console\n`cls` - Limpar console (alternativo)\n`say "mensagem"` - Enviar mensagem no chat\n`me "a√ß√£o"` - Comando de a√ß√£o RP',
                        inline: false
                    },
                    {
                        name: 'üìä Informa√ß√µes',
                        value: '`netgraph` - Mostrar informa√ß√µes de rede\n`strdbg` - Debug de streaming\n`resmon` - Monitor de recursos\n`txd` - Informa√ß√µes de texturas',
                        inline: false
                    },
                    {
                        name: 'üéÆ Jogo',
                        value: '`noclip` - Modo noclip (se permitido)\n`coords` - Mostrar coordenadas\n`save` - Salvar posi√ß√£o (alguns servidores)\n`load` - Carregar posi√ß√£o salva',
                        inline: false
                    },
                    {
                        name: 'üîß Corre√ß√µes',
                        value: '`refresh` - Recarregar recursos\n`restart [recurso]` - Reiniciar recurso espec√≠fico\n`stop [recurso]` - Parar recurso\n`start [recurso]` - Iniciar recurso',
                        inline: false
                    }
                )
                .setFooter({ text: 'Nem todos os comandos funcionam em todos os servidores!' })
                .setTimestamp();

            await interaction.reply({ embeds: [embed] });
        } catch (error) {
            console.error('‚ùå Erro em handleComandos:', error);
            await this.handleError(interaction, 'Erro ao exibir lista de comandos.');
        }
    },

    async handleSolucoes(interaction) {
        try {
            const embed = new EmbedBuilder()
                .setColor('#e74c3c')
                .setTitle('üîß Solu√ß√µes para Problemas Comuns')
                .setDescription('Resolva os problemas mais frequentes do FiveM')
                .addFields(
                    {
                        name: '‚ùå N√£o consegue conectar',
                        value: '**Solu√ß√µes:**\n‚Ä¢ Verifique se o FiveM est√° atualizado\n‚Ä¢ Desative antiv√≠rus temporariamente\n‚Ä¢ Execute como administrador\n‚Ä¢ Verifique firewall do Windows\n‚Ä¢ Reinicie o roteador',
                        inline: false
                    },
                    {
                        name: '‚ö†Ô∏è Erro de autentica√ß√£o',
                        value: '**Solu√ß√µes:**\n‚Ä¢ Fa√ßa logout/login no Rockstar\n‚Ä¢ Limpe cache do FiveM\n‚Ä¢ Verifique se o GTA V √© original\n‚Ä¢ Reinicie o Steam/Epic/Rockstar Launcher',
                        inline: false
                    },
                    {
                        name: 'üêå Lag/Travamentos',
                        value: '**Solu√ß√µes:**\n‚Ä¢ Feche programas em segundo plano\n‚Ä¢ Reduza configura√ß√µes gr√°ficas do GTA V\n‚Ä¢ Use modo janela sem bordas\n‚Ä¢ Verifique temperatura do PC\n‚Ä¢ Atualize drivers da GPU',
                        inline: false
                    },
                    {
                        name: 'üíæ Limpeza de Cache',
                        value: '**Windows:**\n`%localappdata%\\FiveM\\FiveM.app\\data\\cache`\n\n**Como fazer:**\n‚Ä¢ Feche o FiveM completamente\n‚Ä¢ Delete a pasta cache\n‚Ä¢ Reinicie o FiveM',
                        inline: false
                    },
                    {
                        name: 'üîÑ Reinstala√ß√£o Limpa',
                        value: '**Passos:**\n1. Desinstale o FiveM\n2. Delete pasta `%localappdata%\\FiveM`\n3. Baixe nova vers√£o do site oficial\n4. Execute como administrador\n5. Configure novamente',
                        inline: false
                    }
                )
                .setFooter({ text: 'Se os problemas persistirem, entre em contato com suporte do servidor!' })
                .setTimestamp();

            await interaction.reply({ embeds: [embed] });
        } catch (error) {
            console.error('‚ùå Erro em handleSolucoes:', error);
            await this.handleError(interaction, 'Erro ao exibir solu√ß√µes de problemas.');
        }
    }
};
